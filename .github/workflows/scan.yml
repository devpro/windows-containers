name: Scan

on:
  workflow_dispatch:
    inputs:
      container_image:
        description: 'Container image to scan'
        required: true
        default: 'docker.io/devprofr/winsamplenet48svc:latest'

jobs:
  image-scan-linux:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # deactivated: error "Operating system is not supported"
      # - name: Run Snyk to check Docker image for vulnerabilities
      #   uses: snyk/actions/docker@master
      #   env:
      #     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      #   with:
      #     image: ${{ github.event.inputs.custom_variable }}

      # deactivated: fatal error "run-once.go:263 401 invaid response code" (https://github.com/deepfence/package-scanner/blob/1a61bae63adbae62a4133dd516bd04223f017f4a/run-once.go#L261, need an instance running and an account, may be possible with https://portal.deepfence.cloud/)
      # - name: Run Deepfence Vulnerability Mapper
      #   env:
      #     DEEPFENCE_CONSOLE_URL: 127.0.0.1
      #     DEEPFENCE_KEY: key
      #     FULL_IMAGE_NAME: ${{ github.event.inputs.custom_variable }}
      #     FAIL_CVE_COUNT: 100
      #     FAIL_CRITICAL_CVE_COUNT: 10
      #     FAIL_HIGH_CVE_COUNT: 100
      #     FAIL_MEDIUM_CVE_COUNT: 100
      #     FAIL_LOW_CVE_COUNT: 100
      #     FAIL_CVE_SCORE: 10
      #     DEEPFENCE_LICENSE: ""
      #     DEEPFENCE_PRODUCT: ""
      #   run: |
      #     docker pull quay.io/deepfenceio/deepfence_package_scanner_cli:2.5.2
      #     docker run -i --rm --net=host --privileged=true -v /var/run/docker.sock:/var/run/docker.sock:rw quay.io/deepfenceio/deepfence_package_scanner_cli:2.5.2 -source "$FULL_IMAGE_NAME" -console-url=$DEEPFENCE_CONSOLE_URL -deepfence-key=$DEEPFENCE_KEY -fail-on-count=$FAIL_CVE_COUNT -fail-on-critical-count=$FAIL_CRITICAL_CVE_COUNT -fail-on-high-count=$FAIL_HIGH_CVE_COUNT -fail-on-medium-count=$FAIL_MEDIUM_CVE_COUNT -fail-on-low-count=$FAIL_LOW_CVE_COUNT -fail-on-score=$FAIL_CVE_SCORE -scan-type="base,java,python,ruby,php,nodejs,js,dotnet"

      - name: Scan image for vulnerabilities with Anchore Grype
        id: scan
        uses: anchore/scan-action@v6
        with:
          image: ${{ github.event.inputs.custom_variable }}
          severity-cutoff: critical
          fail-build: false # TODO: review it when configuration is made

      - name: Inspect action SARIF report
        run: cat ${{ steps.scan.outputs.sarif }}

      - name: Upload Anchore scan SARIF report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

  # image-scan-windows:
  #   runs-on: windows-2022
  #   steps:
      # deactivated: doesn't scan .NET 4.8 code
      # - name: Run Trivy vulnerability scanner
      #   uses: aquasecurity/trivy-action@0.28.0
      #   with:
      #     image-ref: ${{ github.event.inputs.custom_variable }}
      #     format: 'table'
      #     exit-code: '1'
      #     ignore-unfixed: true
      #     vuln-type: 'os,library'
      #     severity: 'CRITICAL,HIGH'
